"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const RelationsModal = ({ step, relationChoice, otherText, setRelationChoice, setOtherText, onNextStep, onCancel, }) => {
    return ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: "modal-overlay" }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "modal-content" }, { children: [step === 1 && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("h2", { children: "View Part Relations" }), (0, jsx_runtime_1.jsx)("p", { children: "Which parts do you want to see relations for? Choose from your CAD please!" }), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: "modal-button-row" }, { children: (0, jsx_runtime_1.jsx)("button", Object.assign({ className: "primary-modal-btn", onClick: onNextStep }, { children: "Submit" })) }))] })), step === 2 && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("h2", { children: "View Part Relations" }), (0, jsx_runtime_1.jsx)("p", { children: "Do you want to see relations in the body, in the assembly, or Other?" }), (0, jsx_runtime_1.jsxs)("div", Object.assign({ style: { margin: "1rem 0" } }, { children: [(0, jsx_runtime_1.jsxs)("label", Object.assign({ style: { display: "block", marginBottom: "8px" } }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "relationChoice", value: "body", checked: relationChoice === "body", onChange: (e) => setRelationChoice(e.target.value) }), " ", "In the body"] })), (0, jsx_runtime_1.jsxs)("label", Object.assign({ style: { display: "block", marginBottom: "8px" } }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "relationChoice", value: "assembly", checked: relationChoice === "assembly", onChange: (e) => setRelationChoice(e.target.value) }), " ", "In the assembly"] })), (0, jsx_runtime_1.jsxs)("label", Object.assign({ style: { display: "block" } }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "radio", name: "relationChoice", value: "other", checked: relationChoice === "other", onChange: (e) => setRelationChoice(e.target.value) }), " ", "Other"] })), relationChoice === "other" && ((0, jsx_runtime_1.jsx)("textarea", { rows: 2, value: otherText, onChange: (e) => setOtherText(e.target.value), placeholder: "Please explain...", style: { width: "100%", marginTop: "8px" } }))] })), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: "modal-button-row" }, { children: (0, jsx_runtime_1.jsx)("button", Object.assign({ className: "primary-modal-btn", onClick: onNextStep }, { children: "Send" })) }))] })), step === 3 && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("h2", { children: "View Part Relations" }), (0, jsx_runtime_1.jsx)("p", { children: "Running analysis..." }), (0, jsx_runtime_1.jsx)("div", { className: "spinner" }), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: "modal-button-row" }, { children: (0, jsx_runtime_1.jsx)("button", Object.assign({ className: "close-modal-btn", onClick: onCancel }, { children: "Cancel" })) }))] }))] })) })));
};
exports.default = RelationsModal;
